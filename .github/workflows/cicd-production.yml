name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  cicd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create environment file
        run: |
          cp example.env .env
          echo APP_HOST=${{ secrets.APP_HOST_PRODUCTION }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME_PRODUCTION }} >> .env
          echo DB_PASS=${{ secrets.DB_PASS }} >> .env
          echo DB_USER=${{ secrets.DB_USER }} >> .env
          echo MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }} >> .env
          echo MAIL_USER=${{ secrets.MAIL_USER }} >> .env
          echo MINIO_USER=${{ secrets.MINIO_USER }} >> .env
          echo MINIO_PASSWORD=${{ secrets.MINIO_PASSWORD }} >> .env
          echo BUCKET_NAME=${{ secrets.MINIO_BUCKET_NAME_PRODUCTION }} >> .env
          echo PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} >> .env
          echo PRIVATE_KEY_ID=${{ secrets.FIREBASE_PRIVATE_KEY_ID }} >> .env
          echo PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }} >> .env
          echo CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }} >> .env
          echo CLIENT_ID=${{ secrets.FIREBASE_CLIENT_ID }} >> .env
          echo CLIENT_CERT_URL=${{ secrets.FIREBASE_CLIENT_CERT_URL }} >> .env
          echo MG_DB_HOST=${{ secrets.MG_DB_HOST }} >> .env
          echo MG_DB_USER=${{ secrets.MG_DB_USER }} >> .env
          echo MG_DB_PASS=${{ secrets.MG_DB_PASS }} >> .env
          echo MG_DB_NAME=${{ secrets.MG_DB_NAME }} >> .env
          echo MG_DB_COLLECTION=${{ secrets.MG_DB_COLLECTION }} >> .env
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker Image Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_SECRET }}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v3
        id: docker_build
        with:
          context: ./
          file: ./docker/Dockerfile.prod
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/safe-talk
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Verify image
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Install cloudflare cli and install sshpass
        run: |
          chmod +x ./scripts/install-cloudflared.sh
          ./scripts/install-cloudflared.sh
          mkdir ~/.ssh
          echo "${{ secrets.SSH_SCRIPT }}" >> ~/.ssh/config
          sudo apt install sshpass

      - name: SSH to server
        run: |
          sshpass -p ${{ secrets.SSH_PASSWORD }} ssh -o StrictHostKeyChecking=no hana-server './ci-cd/safe-talk.sh'
