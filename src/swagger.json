{
  "openapi": "3.0.3",
  "info": {
    "title": "Safe Talk - Secure Chat Application API",
    "termsOfService": "https://jthanh8144.studio",
    "contact": {
      "email": "thanhvo618@gmail.com"
    },
    "version": "1.1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://safe-talk-dev.jthanh8144.studio"
    },
    {
      "url": "https://safe-talk.jthanh8144.studio"
    }
  ],
  "tags": [
    {
      "name": "general",
      "description": "API general"
    },
    {
      "name": "auth",
      "description": "API for authentication features"
    },
    {
      "name": "users",
      "description": "API for users"
    },
    {
      "name": "friend-requests",
      "description": "API for friend request"
    },
    {
      "name": "conservations",
      "description": "API for conservations"
    },
    {
      "name": "call",
      "description": "API for calling feature"
    }
  ],
  "paths": {
    "/presigned-url": {
      "get": {
        "tags": [
          "general"
        ],
        "summary": "Get presigned url for upload file",
        "description": "Search users",
        "operationId": "presignedUrl",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "type of file",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "folder",
            "in": "query",
            "description": "name of saved file folder",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "presignedUrl": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "presignedUrl",
                    "url"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Entity error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/devices": {
      "get": {
        "tags": [
          "general"
        ],
        "summary": "Get ID of the device",
        "description": "Get ID of the device in API server",
        "operationId": "device",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "description": "unique ID of the device",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "deviceId": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Entity error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register new user",
        "description": "Register new user",
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Register"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Create user successfully, please check your email to verify your account."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Entity error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Email is existed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Email is existed"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Verify email",
        "description": "Verify email",
        "operationId": "verify",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "verify ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Email verify successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Verify error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Email verify request is invalid"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login user",
        "description": "Login user",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "string",
                      "example": "abc-def"
                    },
                    "email": {
                      "type": "string",
                      "example": "test@gmail.com"
                    },
                    "accessToken": {
                      "type": "string",
                      "example": "..."
                    },
                    "refreshToken": {
                      "type": "string",
                      "example": "..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email or password is incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Username or password is incorrect!"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Account is inactive",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Your account is inactive. If you want to active your account, please click this link."
                    },
                    "link": {
                      "type": "string",
                      "example": "https://active.link"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Refresh token",
        "description": "Refresh token",
        "operationId": "refreshToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "accessToken": {
                      "type": "string",
                      "example": "..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Entity error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Refresh token error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logout",
        "description": "Remove refresh token save in database",
        "operationId": "logout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshToken"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "accessToken": {
                      "type": "string",
                      "example": "Logout successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Entity error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/auth/request-reset-password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Request reset password",
        "description": "Remove refresh token save in database",
        "operationId": "requestResetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "test@test.com"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "If the entered email is matched, a verify code will be send to your email."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Entity error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Reset password",
        "description": "Remove refresh token save in database",
        "operationId": "resetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "test@test.com"
                  },
                  "code": {
                    "type": "string",
                    "example": 123456
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "If the entered email and verify code are matched and the request isn't expire, new password will be send to your email."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Entity error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Search users",
        "description": "Search users",
        "operationId": "searchUsers",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "email or name of the user",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page of data",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "messages",
                    "totalPage"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "users": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "nextPage": {
                      "type": "number",
                      "example": 2
                    },
                    "totalPage": {
                      "type": "number",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Entity error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Delete the logging user",
        "description": "Delete the logging user",
        "operationId": "deleteUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "password"
                ],
                "properties": {
                  "password": {
                    "type": "string",
                    "example": "test123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Remove account successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/profile": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get profile of the user",
        "description": "Get profile of the user",
        "operationId": "userProfile",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update user profile",
        "description": "Update user profile",
        "operationId": "updateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullName": {
                    "type": "string",
                    "example": "Optional"
                  },
                  "avatarUrl": {
                    "type": "string",
                    "example": "Optional"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Update profile successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/password": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update user password",
        "description": "Update user password",
        "operationId": "updatePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "oldPassword",
                  "newPassword"
                ],
                "properties": {
                  "oldPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Update password success | Old password is incorrect"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/friends": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get list friends of the user",
        "description": "Get list friends of the user",
        "operationId": "userFriends",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "name or email of the user to search",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "friends",
                    "totalPage"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "friends": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "nextPage": {
                      "type": "number",
                      "example": 2
                    },
                    "totalPage": {
                      "type": "number",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/inactive": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Inactive user",
        "description": "Inactive user",
        "operationId": "inactiveUser",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Inactive account successfully"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/active": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Active user",
        "description": "Active user",
        "operationId": "activeUser",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "user ID",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Active account successfully"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/check-email": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Check the email is existed",
        "description": "Check the email is existed",
        "operationId": "checkEmail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "test@gmail.com"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "isExisted": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Entity error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/conservations": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get list conservations of the user",
        "description": "Get list conservations of the user",
        "operationId": "userConservations",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "conservations",
                    "totalPage"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "conservations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Conservation"
                      }
                    },
                    "nextPage": {
                      "type": "number",
                      "example": 2
                    },
                    "totalPage": {
                      "type": "number",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/conservations/{partnerId}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get the conservation with partnerId",
        "description": "Get the conservation with partnerId",
        "operationId": "conservationWith",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "description": "partner ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "existed"
                  ],
                  "properties": {
                    "existed": {
                      "type": "boolean",
                      "example": true
                    },
                    "conservation": {
                      "$ref": "#/components/schemas/Conservation"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/signal": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Upload signal key",
        "description": "Upload signal key",
        "operationId": "signalKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "registrationId": {
                    "type": "number"
                  },
                  "ikPublicKey": {
                    "type": "string"
                  },
                  "spkKeyId": {
                    "type": "number"
                  },
                  "spkPublicKey": {
                    "type": "string"
                  },
                  "spkSignature": {
                    "type": "string"
                  },
                  "pkKeyId": {
                    "type": "number"
                  },
                  "pkPublicKey": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/fcm": {
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Upload FCM token",
        "description": "Upload FCM token",
        "operationId": "fcm",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fcmToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/unfriend/{userId}": {
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Unfriend with userId",
        "description": "Unfriend with userId",
        "operationId": "unfriend",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "partner ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/friend-requests": {
      "post": {
        "tags": [
          "friend-requests"
        ],
        "summary": "Send friend request",
        "description": "Send friend request",
        "operationId": "sendFriendRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "receiverId"
                ],
                "properties": {
                  "receiverId": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Entity error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "friend-requests"
        ],
        "summary": "Update friend request",
        "description": "Update friend request",
        "operationId": "updateFriendRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "status"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "accepted",
                      "declined"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "example": "Update status successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Entity error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/friend-requests/{id}": {
      "delete": {
        "tags": [
          "friend-requests"
        ],
        "summary": "Delete sended friend request",
        "description": "Delete sended friend request",
        "operationId": "deleteFriendRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the friend request",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "example": "Delete friend request successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Entity error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Forbidden"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/friend-requests/sended": {
      "get": {
        "tags": [
          "friend-requests"
        ],
        "summary": "Get list sended friend requests",
        "description": "Get list sended friend requests",
        "operationId": "sendedFriendRequests",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "friendRequests",
                    "totalPage"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "friendRequests": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FriendRequestWithUser"
                      }
                    },
                    "nextPage": {
                      "type": "number",
                      "example": 2
                    },
                    "totalPage": {
                      "type": "number",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/friend-requests/received": {
      "get": {
        "tags": [
          "friend-requests"
        ],
        "summary": "Get list received friend requests",
        "description": "Get list received friend requests",
        "operationId": "receivedFriendRequests",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "friendRequests",
                    "totalPage"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "friendRequests": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FriendRequestWithUser"
                      }
                    },
                    "nextPage": {
                      "type": "number",
                      "example": 2
                    },
                    "totalPage": {
                      "type": "number",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/conservations": {
      "post": {
        "tags": [
          "conservations"
        ],
        "summary": "Create conservation",
        "description": "Create conservation",
        "operationId": "createConservation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "receiverId": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "messageType": {
                    "type": "string",
                    "enum": [
                      "text",
                      "image",
                      "video",
                      "another"
                    ]
                  },
                  "encryptType": {
                    "type": "number",
                    "enum": [
                      1,
                      3
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "conservationId": {
                      "type": "string"
                    },
                    "messageId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/conservations/{id}": {
      "get": {
        "tags": [
          "conservations"
        ],
        "summary": "Get messages of the conservation",
        "description": "Get messages of the conservation",
        "operationId": "detailConservation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the conservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "page number",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "messages",
                    "totalPage"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Message"
                      }
                    },
                    "nextPage": {
                      "type": "number",
                      "example": 2
                    },
                    "totalPage": {
                      "type": "number",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "conservations"
        ],
        "summary": "Send message in the conservation",
        "description": "Send message in the conservation",
        "operationId": "sendMessage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the conservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "messageType": {
                    "type": "string",
                    "enum": [
                      "text",
                      "image",
                      "video",
                      "another"
                    ]
                  },
                  "encryptType": {
                    "type": "number",
                    "enum": [
                      1,
                      3
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "messageId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/conservations/{id}/settings": {
      "get": {
        "tags": [
          "conservations"
        ],
        "summary": "Get settings of the conservation",
        "description": "Get settings of the conservation",
        "operationId": "conservationSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the conservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "success",
                    "setting"
                  ],
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "setting": {
                      "$ref": "#/components/schemas/ConservationSetting"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/conservations/settings/{id}": {
      "put": {
        "tags": [
          "conservations"
        ],
        "summary": "Update settings of the conservation",
        "description": "Update settings of the conservation",
        "operationId": "updateConservationSetting",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id of the conservation setting",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isMuted": {
                    "type": "boolean"
                  },
                  "isRemoved": {
                    "type": "boolean"
                  },
                  "isArchived": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/call": {
      "post": {
        "tags": [
          "call"
        ],
        "summary": "Create call",
        "description": "Create call",
        "operationId": "createCall",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "receiverId",
                  "meetingId",
                  "callerName"
                ],
                "properties": {
                  "receiverId": {
                    "type": "string"
                  },
                  "meetingId": {
                    "type": "string"
                  },
                  "callerName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Create call successfully!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "The user hasn't FCM token!"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "call"
        ],
        "summary": "Update call",
        "description": "Update call",
        "operationId": "updateCall",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userId",
                  "type"
                ],
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "CALL_INITIATED",
                      "ACCEPTED",
                      "REJECTED",
                      "DISCONNECT"
                    ]
                  },
                  "meetingId": {
                    "type": "string"
                  },
                  "callerName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Update call successfully!"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorize",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorWithStatus"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Register": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "example": "test@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "tesT123!"
          },
          "fullName": {
            "type": "string",
            "example": "Vo Van Thanh"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ErrorWithStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string"
          }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "tesT123!"
          }
        }
      },
      "RefreshToken": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "example": "..."
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "email",
          "isVerified",
          "isActive"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": "12345abc"
          },
          "email": {
            "type": "string",
            "example": "test@gmail.com"
          },
          "fullName": {
            "type": "string",
            "example": "Vo Van Thanh"
          },
          "avatarUrl": {
            "type": "string",
            "example": "..."
          },
          "isVerified": {
            "type": "boolean",
            "example": true
          },
          "isActive": {
            "type": "boolean",
            "example": true
          }
        }
      },
      "FriendRequestWithUser": {
        "type": "object",
        "required": [
          "id",
          "status",
          "requesterId",
          "receiverId"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "declined"
            ]
          },
          "requesterId": {
            "type": "string"
          },
          "receiverId": {
            "type": "string"
          },
          "requester": {
            "$ref": "#/components/schemas/User"
          },
          "receiver": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "SignalStore": {
        "type": "object",
        "properties": {
          "registrationId": {
            "type": "string"
          },
          "ikPublicKey": {
            "type": "string"
          },
          "spkKeyId": {
            "type": "number"
          },
          "spkPublicKey": {
            "type": "string"
          },
          "spkSignature": {
            "type": "string"
          },
          "pkKeyId": {
            "type": "number"
          },
          "pkPublicKey": {
            "type": "string"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "messageType": {
            "type": "string",
            "enum": [
              "text",
              "image",
              "video",
              "another"
            ]
          },
          "encryptType": {
            "type": "number",
            "enum": [
              1,
              3
            ]
          },
          "conservationId": {
            "type": "string"
          },
          "isRemoved": {
            "type": "boolean"
          },
          "sender": {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "fullName": {
                "type": "string"
              },
              "avatarUrl": {
                "type": "string"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "example": "2023-06-07T04:18:45.998Z"
          }
        }
      },
      "ConservationSetting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "isMuted": {
            "type": "boolean"
          },
          "isRemoved": {
            "type": "boolean"
          },
          "isArchived": {
            "type": "boolean"
          },
          "autoRemoveAfter": {
            "type": "number"
          },
          "conservationId": {
            "type": "string"
          }
        }
      },
      "Conservation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "signal": {
            "$ref": "#/components/schemas/SignalStore"
          },
          "latestMessage": {
            "$ref": "#/components/schemas/Message"
          },
          "setting": {
            "$ref": "#/components/schemas/ConservationSetting"
          }
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
